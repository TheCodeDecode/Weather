{"version":3,"sources":["api/index.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","data","App","useState","setsQuery","weather","setWeather","search","e","key","className","type","placeholder","value","onChange","target","onKeyPress","main","name","sys","country","Math","round","temp","src","icon","alt","description","ReactDom","render","document","getElementById"],"mappings":"uPAKaA,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACHC,IAAMC,IAJnB,kDAI4B,CACpCC,OAAQ,CACNC,EAAGL,EACHM,MAAO,SACPC,MAPU,sCAEY,uBAClBC,EADkB,EAClBA,KADkB,kBASnBA,GATmB,2CAAH,sDC8CVC,G,MA/CH,WAAO,IAAD,EACWC,mBAAS,IADpB,mBACTV,EADS,KACFW,EADE,OAEcD,mBAAS,IAFvB,mBAETE,EAFS,KAEAC,EAFA,KAIVC,EAAM,uCAAG,WAAOC,GAAP,eAAAd,EAAA,yDACC,UAAVc,EAAEC,IADO,uBAEXL,EAAU,IAFC,SAGQZ,EAAaC,GAHrB,OAGLQ,EAHK,OAIXK,EAAWL,GAJA,2CAAH,sDAQZ,OACE,oCACE,yBAAKS,UAAU,kBACb,2BACEC,KAAK,OACLD,UAAU,SACVE,YAAY,YACZC,MAAOpB,EACPqB,SAAU,SAACN,GAAD,OAAOJ,EAAUI,EAAEO,OAAOF,QACpCG,WAAYT,IAEbF,EAAQY,MACP,yBAAKP,UAAU,QACb,wBAAIA,UAAU,aACZ,8BAAOL,EAAQa,MACf,6BAAMb,EAAQc,IAAIC,UAEpB,yBAAKV,UAAU,aACZW,KAAKC,MAAMjB,EAAQY,KAAKM,MACzB,wCAEF,yBAAKb,UAAU,QACb,yBACEA,UAAU,YACVc,IAAG,4CAAuCnB,EAAQA,QAAQ,GAAGoB,KAA1D,WACHC,IAAKrB,EAAQA,QAAQ,GAAGsB,cAE1B,2BAAItB,EAAQA,QAAQ,GAAGsB,mBCvCrCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3fb34d2c.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst URL = \"https://api.openweathermap.org/data/2.5/weather\";\r\nconst API_KEY = \"a1663a6be8b4a73e934c3ca45681cf37\";\r\n\r\nexport const fetchWeather = async (query) => {\r\n  const { data } = await axios.get(URL, {\r\n    params: {\r\n      q: query,\r\n      units: \"metric\",\r\n      APPID: API_KEY,\r\n    },\r\n  });\r\n\r\n  return data;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { fetchWeather } from \"./api\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [query, setsQuery] = useState(\"\");\r\n  const [weather, setWeather] = useState({});\r\n\r\n  const search = async (e) => {\r\n    if (e.key === \"Enter\") {\r\n      setsQuery(\"\");\r\n      const data = await fetchWeather(query);\r\n      setWeather(data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main-container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"search\"\r\n          placeholder=\"Search...\"\r\n          value={query}\r\n          onChange={(e) => setsQuery(e.target.value)}\r\n          onKeyPress={search}\r\n        />\r\n        {weather.main && (\r\n          <div className=\"city\">\r\n            <h2 className=\"city-name\">\r\n              <span>{weather.name}</span>\r\n              <sup>{weather.sys.country}</sup>\r\n            </h2>\r\n            <div className=\"city-temp\">\r\n              {Math.round(weather.main.temp)}\r\n              <sup>&deg; C</sup>\r\n            </div>\r\n            <div className=\"info\">\r\n              <img\r\n                className=\"city-icon\"\r\n                src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\r\n                alt={weather.weather[0].description}\r\n              />\r\n              <p>{weather.weather[0].description}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}